@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}


<div class="container-fluid">
    <div class="row">
        <!-- Główna zawartość -->
        <div class="col-lg-9 col-md-8">
            <div class="text-center">
                <div class="mb-4">
                    <a href="/MemoryGame" class="btn btn-lg btn-warning">Tryb gry pamięciowej: mnożenie</a>
                </div>
                <h1 class="display-4">Gra: Tabliczka Mnożenia</h1>

                <form method="post" class="mb-4">
                    <div class="mb-2 fw-semibold fs-5">Wybierz poziom trudności:</div>
                    <div class="d-flex justify-content-center gap-2 flex-wrap">
                        <button type="submit" name="Level" value="20" class="btn btn-outline-primary @(Model.Level == 20 ? "active" : "")">Do 20</button>
                        <button type="submit" name="Level" value="40" class="btn btn-outline-primary @(Model.Level == 40 ? "active" : "")">Do 40</button>
                        <button type="submit" name="Level" value="60" class="btn btn-outline-primary @(Model.Level == 60 ? "active" : "")">Do 60</button>
                        <button type="submit" name="Level" value="80" class="btn btn-outline-primary @(Model.Level == 80 ? "active" : "")">Do 80</button>
                        <button type="submit" name="Level" value="100" class="btn btn-outline-primary @(Model.Level == 100 ? "active" : "")">Do 100</button>
                        <button type="submit" name="Level" value="1000" class="btn btn-outline-primary @(Model.Level == 1000 ? "active" : "")">Do 1000</button>
                    </div>
                </form>


    @if (Model.GameWon)
    {
        <div class="d-flex flex-column align-items-center mt-5">
            <div class="alert alert-success display-5 fw-bold px-5 py-4 text-center" role="alert">
                Gratulacje! Ukończyłeś grę – @MultiplicationGame.Pages.IndexModel.RequiredAnswers poprawnych odpowiedzi z rzędu!
            </div>
            <div class="card shadow-sm mb-3" style="max-width: 420px;">
                <div class="card-body">
                    <h5 class="card-title">Historia równań tej próby:</h5>
                    <ul class="list-group list-group-flush">
                        @foreach (var entry in Model.HistoryWithCorrectness)
                        {
                            var bgClass = entry.IsCorrect ? "bg-success text-white" : "bg-danger text-white";
                            <li class="list-group-item @bgClass">@entry.Text</li>
                        }
                    </ul>
                </div>
            </div>
            <form method="post">
                <input type="hidden" name="Level" value="@Model.Level" />
                <input type="hidden" name="SolvedQuestions" value="" />
                <input type="hidden" name="Streak" value="0" />
                <input type="hidden" name="AttemptsLeft" value="3" />
                <button type="submit" class="btn btn-success btn-lg mt-3">Zagraj ponownie</button>
            </form>
        </div>
    }
    else if (Model.GameLost)
    {
        <div class="d-flex flex-column align-items-center mt-5">
            <div class="alert alert-danger display-5 fw-bold px-5 py-4 text-center" role="alert">
                Przegrałeś! Skończyły się wszystkie życia.
            </div>
            <div class="card shadow-sm mb-3" style="max-width: 420px;">
                <div class="card-body">
                    <h5 class="card-title">Historia równań tej gry:</h5>
                    <ul class="list-group list-group-flush">
                        @foreach (var entry in Model.HistoryWithCorrectness)
                        {
                            var bgClass = entry.IsCorrect ? "bg-success text-white" : "bg-danger text-white";
                            <li class="list-group-item @bgClass">@entry.Text</li>
                        }
                    </ul>
                </div>
            </div>
            <form method="post">
                <input type="hidden" name="Level" value="@Model.Level" />
                <input type="hidden" name="SolvedQuestions" value="" />
                <input type="hidden" name="Streak" value="0" />
                <input type="hidden" name="AttemptsLeft" value="3" />
                <input type="hidden" name="GameLost" value="false" />
                <button type="submit" class="btn btn-danger btn-lg mt-3">Spróbuj ponownie</button>
            </form>
        </div>
    }
    else if (Model.Question != null)
    {
        <div class="mb-2">
            <div class="d-flex justify-content-center align-items-center gap-1">
                @for (int i = 1; i <= 3; i++)
                {
                    var heartClass = i <= Model.AttemptsLeft ? "heart-full" : "heart-empty";
                    <span class="heart-indicator @heartClass" title="Życie @(i)">❤️</span>
                }
            </div>
            <div class="small text-muted">Pozostałe życia</div>
        </div>
        <form method="post" class="question-form">
            <input type="hidden" name="Level" value="@Model.Level" />
            <input type="hidden" name="A" value="@Model.Question?.A" />
            <input type="hidden" name="B" value="@Model.Question?.B" />
            <input type="hidden" name="Streak" value="@Model.Streak" />
            <input type="hidden" name="SolvedQuestions" value="@Model.SolvedQuestions" />
            <input type="hidden" name="AttemptsLeft" value="@Model.AttemptsLeft" />
            <input type="hidden" name="NextQuestion" id="NextQuestionField" value="false" />
            <input type="hidden" name="HistoryRaw" value="@Model.HistoryRaw" />
            <div class="d-flex justify-content-center align-items-center gap-3 my-4 flex-wrap">
                <div class="display-3 border border-primary rounded-4 bg-light shadow-sm d-flex align-items-center justify-content-center" style="width:100px;height:100px;">@Model.Question?.A</div>
                <div class="display-3 fw-bold">x</div>
                <div class="display-3 border border-primary rounded-4 bg-light shadow-sm d-flex align-items-center justify-content-center" style="width:100px;height:100px;">@Model.Question?.B</div>
                <div class="display-3 fw-bold">=</div>
                <div class="display-3 border border-warning rounded-4 bg-white shadow-sm d-flex align-items-center justify-content-center" style="width:140px;height:100px;">
                    <input type="text" name="UserAnswer" required maxlength="10" class="form-control form-control-lg text-center border-0 bg-transparent p-0" style="width:120px;height:80px;font-size:2.5rem;box-shadow:none;outline:none;" autocomplete="off" pattern="[0-9]*" @(Model.AnswerChecked && (Model.IsCorrect || Model.AttemptsLeft == 0) ? "readonly" : "") />
                </div>
            </div>
            @if (Model.AnswerChecked)
            {
                <div class="mt-2 mb-3 d-flex flex-column align-items-center">
                    <div class="card shadow-sm border-0 mb-2" style="max-width: 420px;">
                        <div class="card-body text-center p-3">
                            <div class="fs-3 mb-2">
                                <b>@Model.A</b> <span class="mx-1">×</span> <b>@Model.B</b>
                                @if (Model.IsCorrect || Model.AttemptsLeft == 0)
                                {
                                    <span class="mx-1">=</span> <b>@Model.CorrectAnswer</b>
                                }
                            </div>
                            <div class="mb-2">
                                Twoja odpowiedź: <b>@Model.UserAnswer</b>
                            </div>
                            <div class="mb-2">
                                Poprawnych odpowiedzi z rzędu: <b>@Model.Streak</b>/@MultiplicationGame.Pages.IndexModel.RequiredAnswers
                            </div>
                            <div class="mb-2">
                                Pozostało prób: <b>@Model.AttemptsLeft</b>/3
                            </div>
                            @if (Model.IsCorrect)
                            {
                                <div class="alert alert-success fw-bold fs-5 mb-2" role="alert">Poprawna odpowiedź! Sukces!</div>
                            }
                            else if (Model.AttemptsLeft == 0)
                            {
                                <div class="alert alert-danger fw-bold fs-5 mb-2" role="alert">3 błędne próby. Poprawny wynik: <b>@Model.CorrectAnswer</b></div>
                            }
                            else
                            {
                                <div class="alert alert-danger fw-bold fs-5 mb-2" role="alert">Błędna odpowiedź.</div>
                            }
                        </div>
                    </div>
                </div>
            }
            @if (Model.GameWon)
            {
                <div class="mt-3">
                    <h2 class="text-success">Wygrałeś! @MultiplicationGame.Pages.IndexModel.RequiredAnswers poprawnych odpowiedzi z rzędu!</h2>
                    <form method="post">
                        <input type="hidden" name="Level" value="@Model.Level" />
                        <input type="hidden" name="Streak" value="0" />
                        <button type="submit" class="btn btn-success">Zagraj ponownie</button>
                    </form>
                </div>
            }
            @if (Model.AnswerChecked)
            {
                <button type="submit" class="btn btn-lg mt-2 @(Model.IsCorrect ? "btn-success" : (Model.AttemptsLeft == 0 ? "btn-danger" : "btn-warning"))" onclick="document.getElementById('NextQuestionField').value='true';">
                    @(Model.IsCorrect ? "Następne pytanie" : (Model.AttemptsLeft == 0 ? "Powtórz" : "Spróbuj ponownie"))
                </button>
            }
            else
            {
                <button type="submit" class="btn btn-primary btn-lg mt-2" onclick="document.getElementById('NextQuestionField').value='false';">Sprawdź</button>
            }
        </form>
    }
    <style>
        body {
            /* Tło: lekko podarta kartka (papier) */
            background-image: url('https://www.transparenttextures.com/patterns/paper-fibers.png'), linear-gradient(135deg, #f8f6f2 90%, #e9e6df 100%);
            background-repeat: repeat;
            background-size: auto;
        }
        
        /* Panel postępu */
        .progress-panel {
            background: rgba(255, 255, 255, 0.9);
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border: 2px solid #e3f2fd;
            position: sticky;
            top: 20px;
        }
        
        .progress-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 8px;
            max-width: 200px;
            margin: 0 auto;
        }
        
        .progress-square {
            width: 40px;
            height: 40px;
            border: 2px solid #ddd;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 14px;
            background: #f8f9fa;
            color: #6c757d;
            transition: all 0.3s ease;
            margin: 0 auto;
        }
        
        .progress-square.completed {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
            border-color: #28a745;
            transform: scale(1.05);
            box-shadow: 0 2px 8px rgba(40, 167, 69, 0.3);
        }
        
        .progress-square.current {
            background: linear-gradient(135deg, #ffc107, #fd7e14);
            color: white;
            border-color: #ffc107;
            animation: pulse 2s infinite;
            box-shadow: 0 2px 8px rgba(255, 193, 7, 0.4);
        }
        
        @@keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }
        
        /* Responsywność */
        @@media (max-width: 768px) {
            .progress-panel {
                position: relative;
                margin-top: 20px;
                margin-bottom: 20px;
            }
            
            .progress-grid {
                grid-template-columns: repeat(5, 1fr);
                max-width: 100%;
            }
            
            .progress-square {
                width: 35px;
                height: 35px;
                font-size: 12px;
            }
        }
        
        .heart-indicator {
            display: inline-block;
            font-size: 2.1rem;
            margin: 0 4px;
            transition: filter 0.2s;
            filter: grayscale(100%) opacity(0.4);
            text-shadow: 1px 1px 2px #fff, 0 0 2px #e57373;
        }
        .heart-full {
            filter: none;
            color: #e53935;
            text-shadow: 1px 1px 2px #fff, 0 0 6px #e57373;
        }
        .heart-empty {
            filter: grayscale(100%) opacity(0.3);
            color: #bdbdbd;
        }
    </style>

                    <!-- Usunięto dodatkowy formularz po sprawdzeniu odpowiedzi -->
            </div>
        </div>
        
        <!-- Panel postępu po prawej stronie -->
        <div class="col-lg-3 col-md-4">
            @if (Model.Question != null)
            {
                <div class="progress-panel">
                    <h5 class="text-center mb-3">Postęp</h5>
                    <div class="progress-grid">
                        @for (int i = 1; i <= MultiplicationGame.Pages.IndexModel.RequiredAnswers; i++)
                        {
                            var isCompleted = i <= Model.Streak;
                            var isCurrent = i == Model.Streak + 1 && !Model.IsGameWon;
                            <div class="progress-square @(isCompleted ? "completed" : "") @(isCurrent ? "current" : "")">
                                @i
                            </div>
                        }
                    </div>
                    <div class="text-center mt-3">
                        <small class="text-muted">@Model.Streak/@MultiplicationGame.Pages.IndexModel.RequiredAnswers ukończone</small>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

    <style>
</div>
